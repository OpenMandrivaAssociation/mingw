diff -up mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd128.c.omv~ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd128.c
--- mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd128.c.omv~	2024-05-19 14:22:15.134769284 +0200
+++ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd128.c	2024-05-19 14:22:17.962797815 +0200
@@ -47,5 +47,5 @@
 #include "dfp_internal.h"
 
 int __cdecl __signbitd128 (_Decimal128 x){
-  return __buintin_signbitd128(x);
+  return __builtin_signbitd128(x);
 }
diff -up mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd32.c.omv~ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd32.c
--- mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd32.c.omv~	2024-05-19 14:22:01.262629269 +0200
+++ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd32.c	2024-05-19 14:22:05.646673530 +0200
@@ -47,5 +47,5 @@
 #include "dfp_internal.h"
 
 int __cdecl __signbitd32 (_Decimal32 x){
-  return __buintin_signbitd32(x);
+  return __builtin_signbitd32(x);
 }
diff -up mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd64.c.omv~ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd64.c
--- mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd64.c.omv~	2024-05-19 14:22:09.438711804 +0200
+++ mingw-w64-v11.0.0/mingw-w64-crt/math/DFP/__signbitd64.c	2024-05-19 14:22:11.954737197 +0200
@@ -47,5 +47,5 @@
 #include "dfp_internal.h"
 
 int __cdecl __signbitd64 (_Decimal64 x){
-  return __buintin_signbitd64(x);
+  return __builtin_signbitd64(x);
 }
diff -up mingw-w64-v11.0.0/mingw-w64-headers/crt/math.h.omv~ mingw-w64-v11.0.0/mingw-w64-headers/crt/math.h
--- mingw-w64-v11.0.0/mingw-w64-headers/crt/math.h.omv~	2024-05-19 14:21:21.438226706 +0200
+++ mingw-w64-v11.0.0/mingw-w64-headers/crt/math.h	2024-05-19 14:21:46.938484580 +0200
@@ -1217,28 +1217,28 @@ __MINGW_EXTENSION long long __cdecl llri
   extern int __cdecl __signbitd128 (_Decimal128);
 
 #ifndef __CRT__NO_INLINE
-  __CRT_INLINE __cdecl __isnand32(_Decimal32 x){
+  __CRT_INLINE int __cdecl __isnand32(_Decimal32 x){
     return __builtin_isnand32(x);
   }
 
-  __CRT_INLINE __cdecl __isnand64(_Decimal64 x){
+  __CRT_INLINE int __cdecl __isnand64(_Decimal64 x){
     return __builtin_isnand64(x);
   }
 
-  __CRT_INLINE __cdecl __isnand128(_Decimal128 x){
+  __CRT_INLINE int __cdecl __isnand128(_Decimal128 x){
     return __builtin_isnand128(x);
   }
 
   __CRT_INLINE int __cdecl __signbitd32 (_Decimal32 x){
-    return __buintin_signbitd32(x);
+    return __builtin_signbitd32(x);
   }
 
   __CRT_INLINE int __cdecl __signbitd64 (_Decimal64 x){
-    return __buintin_signbitd64(x);
+    return __builtin_signbitd64(x);
   }
 
   __CRT_INLINE int __cdecl __signbitd128 (_Decimal128 x){
-    return __buintin_signbitd128(x);
+    return __builtin_signbitd128(x);
   }
 
 #endif
